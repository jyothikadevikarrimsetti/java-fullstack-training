Index: Exception Handling/Method.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.HashMap;\r\nimport java.util.Hashtable;\r\n\r\npublic class Method {\r\n    public static void main(String args[]){\r\n        Hashtable<Integer,Integer> h1=new Hashtable();\r\n//        HashMap<Integer,Integer>h2=new HashMap<>();\r\n        int[] numbers = {1,2,3,4,4};\r\n        for(int i=0; i<numbers.length; i++){\r\n            System.out.println(numbers[i]);\r\n//            if(h1.containsKey(numbers[i])&& h2.containsKey(numbers[i])){\r\n\r\n//            }\r\n//            else {\r\n                h1.put(numbers[i], i);\r\n\r\n//                h2.put(numbers[i], i);\r\n            System.out.println(h1);\r\n            }\r\n        }\r\n//        System.out.println(h1 );\r\n//        System.out.println(h2);\r\n//        System.out.println(h1.get(3));\r\n\r\n    }\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Exception Handling/Method.java b/Exception Handling/Method.java
--- a/Exception Handling/Method.java	
+++ b/Exception Handling/Method.java	
@@ -2,26 +2,26 @@
 import java.util.Hashtable;
 
 public class Method {
-    public static void main(String args[]){
-        Hashtable<Integer,Integer> h1=new Hashtable();
-//        HashMap<Integer,Integer>h2=new HashMap<>();
-        int[] numbers = {1,2,3,4,4};
-        for(int i=0; i<numbers.length; i++){
+    public static void main(String args[]) {
+        Hashtable<Integer, Integer> h1 = new Hashtable();
+        HashMap<Integer, Integer> h2 = new HashMap<>();
+        int[] numbers = {1, 2, 3, 4, 4};
+        for (int i = 0; i < numbers.length; i++) {
             System.out.println(numbers[i]);
-//            if(h1.containsKey(numbers[i])&& h2.containsKey(numbers[i])){
+            if (h1.containsKey(numbers[i]) && h2.containsKey(numbers[i])) {
 
-//            }
-//            else {
+            } else {
                 h1.put(numbers[i], i);
-
-//                h2.put(numbers[i], i);
-            System.out.println(h1);
+                h2.put(numbers[i], i);
+                System.out.println(h1);
             }
         }
-//        System.out.println(h1 );
-//        System.out.println(h2);
-//        System.out.println(h1.get(3));
+        System.out.println(h1);
+        System.out.println(h2);
+        System.out.println(h1.get(3));
 
+
     }
+}
 
 
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/modules.xml	
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/java full stack training.iml" filepath="$PROJECT_DIR$/.idea/java full stack training.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: Matrix problems/SearchAnElement.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>public class SearchAnElement {\r\n    public static void main(String args[]){\r\n        int matrix[][]={\r\n                {1,2,3},\r\n                {4,5,6},\r\n                {7,8,9}\r\n        };\r\n        int number = 80;\r\n        int rows = matrix.length;\r\n        int colms= matrix[0].length;\r\n        for(int i=0; i<rows; i++){\r\n            for(int j=0; j<colms; j++){\r\n                if(matrix[i][j] == number){\r\n                    System.out.println(number);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        System.out.println(\"Return-1\");\r\n//        System.out.println(-1);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Matrix problems/SearchAnElement.java b/Matrix problems/SearchAnElement.java
--- a/Matrix problems/SearchAnElement.java	
+++ b/Matrix problems/SearchAnElement.java	
@@ -5,13 +5,13 @@
                 {4,5,6},
                 {7,8,9}
         };
-        int number = 80;
+        int number = 2;
         int rows = matrix.length;
         int colms= matrix[0].length;
         for(int i=0; i<rows; i++){
             for(int j=0; j<colms; j++){
                 if(matrix[i][j] == number){
-                    System.out.println(number);
+                    System.out.println(i+" , "+j);
                     return;
                 }
             }
Index: .idea/java full stack training.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/java full stack training.iml b/.idea/java full stack training.iml
new file mode 100644
--- /dev/null	
+++ b/.idea/java full stack training.iml	
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/Day 12" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/Logical Programs" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/Matrix problems" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/Inheritance" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/Abstract Methods" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/Exception Handling" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/HashTable" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/Array List java" isTestSource="false" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/misc.xml	
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="17" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
Index: Day 12/ConstructorBox.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>public class ConstructorBox {\r\n        int boxno;\r\n        double width,height,depth;\r\n        void box(double w, double h, double d, int num){\r\n            width = w;\r\n            height = h;\r\n            depth = d;\r\n            boxno = num;\r\n        }\r\n        void box(){\r\n            width=height=depth=0;\r\n        }\r\n        void box(int num){\r\n            this ();\r\n            boxno = num;\r\n        }\r\n    public static void main(String args[]){\r\n            box box1 = new box(1);\r\n        System.out.println(box1.width);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Day 12/ConstructorBox.java b/Day 12/ConstructorBox.java
--- a/Day 12/ConstructorBox.java	
+++ b/Day 12/ConstructorBox.java	
@@ -1,21 +1,1 @@
-public class ConstructorBox {
-        int boxno;
-        double width,height,depth;
-        void box(double w, double h, double d, int num){
-            width = w;
-            height = h;
-            depth = d;
-            boxno = num;
-        }
-        void box(){
-            width=height=depth=0;
-        }
-        void box(int num){
-            this ();
-            boxno = num;
-        }
-    public static void main(String args[]){
-            box box1 = new box(1);
-        System.out.println(box1.width);
-    }
-}
+
Index: Inheritance/addtwonumbers.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Inheritance/addtwonumbers.java b/Inheritance/addtwonumbers.java
new file mode 100644
--- /dev/null	
+++ b/Inheritance/addtwonumbers.java	
@@ -0,0 +1,22 @@
+public class addtwonumbers {
+    public static void main(String args[]) {
+        int a = 2;
+        int b = 3;
+        int result = 6;
+        int sum = a + b;
+        for (int i = 0; i <1; i++) {
+            System.out.println("true");
+            sum++;
+        }
+    }
+}
+//        if(a+b <=result){
+//            System.out.println(true);
+//        }
+//        else{
+//            System.out.println(false);
+//        }
+////        System.out.println("sum="+sum);
+//    }
+//}
+//
Index: Day 12/ConstructorOverloadin.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>public class person {\r\n     String name;\r\n     int age;\r\n    void person()\r\n    {\r\n        name = \"satya\";\r\n        age = \"23\";\r\n    }\r\n    void person(String s , int i){\r\n        name = s;\r\n        age = i;\r\n    }\r\n    void talk()\r\n    {\r\n        System.out.println(\"My name is\" + name);\r\n        System.out.println(\"my age\" + age);\r\n    }\r\n    class details{\r\n        public static void main(String args[]);\r\n            person satya= new person();\r\n            satya.talk();\r\n            person sitha = new(\"sitha\" , 20);\r\n            sitha.talk();\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Day 12/ConstructorOverloadin.java b/Day 12/ConstructorOverloadin.java
--- a/Day 12/ConstructorOverloadin.java	
+++ b/Day 12/ConstructorOverloadin.java	
@@ -1,26 +1,1 @@
-public class person {
-     String name;
-     int age;
-    void person()
-    {
-        name = "satya";
-        age = "23";
-    }
-    void person(String s , int i){
-        name = s;
-        age = i;
-    }
-    void talk()
-    {
-        System.out.println("My name is" + name);
-        System.out.println("my age" + age);
-    }
-    class details{
-        public static void main(String args[]);
-            person satya= new person();
-            satya.talk();
-            person sitha = new("sitha" , 20);
-            sitha.talk();
-    }
-}
 
Index: .idea/uiDesigner.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/uiDesigner.xml b/.idea/uiDesigner.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/uiDesigner.xml	
@@ -0,0 +1,124 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Palette2">
+    <group name="Swing">
+      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
+      </item>
+      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.svg" removable="false" auto-create-binding="false" can-attach-label="true">
+        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
+        <initial-values>
+          <property name="text" value="Button" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="RadioButton" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="CheckBox" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="Label" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
+          <preferred-size width="-1" height="20" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
+      </item>
+    </group>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/vcs.xml	
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
